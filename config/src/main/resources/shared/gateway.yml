spring:
  cloud:
    circuitbreaker:
      resilience4j:
        enabled: true #default
    gateway:
      httpclient:
        connect-timeout: 1000
        response-timeout: 5s
      discovery:
        locator:
          enabled: true
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins: "http://localhost:80"
            allowedMethods:
              - GET
              - POST
              - OPTIONS
      actuator:
        verbose:
          enabled: true # default

      routes:
        - id: auth-service
          uri: lb://auth-service:7090
          predicates:
            - Path=/uaa/**
        - id: account-service
          uri: lb://account-service
          predicates:
            - Path=/accounts/**
        - id: statistics-service
          uri: lb://statistics-service
          predicates:
            - Path=/statistics/**
        - id: notification-service
          uri: lb://notification-service
          predicates:
            - Path=/notifications/**
  security:
    oauth2:
      client:
        registration:
          messaging-client-oidc:
            provider: spring
            client-id: messaging-client
            client-secret: secret
            authorization-grant-type: authorization_code
            redirect-uri: "http://127.0.0.1:8080/login/oauth2/code/{registrationId}"
            scope: openid
            client-name: messaging-client-oidc
          messaging-client-authorization-code:
            provider: spring
            client-id: messaging-client
            client-secret: secret
            authorization-grant-type: authorization_code
            redirect-uri: "http://127.0.0.1:8080/authorized"
            scope: message.read,message.write
            client-name: messaging-client-authorization-code
        provider:
          spring:
            issuer-uri: http://127.0.0.1:7090/uaa

management:
  endpoint:
    gateway:
      enabled: true # default value
  endpoints:
    web:
      exposure:
        include: gateway

server:
  port: 7030
